/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package BinarySearch;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testOddSafe() {
        assertEquals("Odd array, expected found at index 2", 2, CC3.binarySearch(new int[]{1,2,3,4,5}, 3));
        assertEquals("Odd array, expected found at index 2", 0, CC3.binarySearch(new int[]{1,2,3,4,5}, 1));
        assertEquals("Odd array, expected found at index 2", 4, CC3.binarySearch(new int[]{1,2,3,4,5}, 5));
        // Not Found
        assertEquals("Not Found, expected -1", -1, CC3.binarySearch(new int[]{1,2,3,4,5,6}, 7));
    }
    @Test public void testEvenSafe(){
        assertEquals("Even array, expected found at index 1",1, CC3.binarySearch(new int[]{1,3,5,7},3));
        assertEquals("Even array, expected found at index 0",0, CC3.binarySearch(new int[]{1,3,5,7},1));
        assertEquals("Even array, expected found at index length-1",5, CC3.binarySearch(new int[]{1,3,5,7,8,9},9));
    }
    @Test public void testEdgeCases() {
        // Empty Array
        assertEquals("Empty Array", -1, CC3.binarySearch(new int[]{}, 1));
    }
    @Test public void testFailCases() {
        // Un Sorted Array, does exist but must be sorted to work correctly
        assertEquals("Does exist but unsorted array causes issues",-1,CC3.binarySearch(new int[]{1,99,3,4,5,6}, 99));
    }
}
